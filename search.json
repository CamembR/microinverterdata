[{"path":"https://camembr.github.io/microinverterdata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 microinverterdata authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://camembr.github.io/microinverterdata/articles/APSystems_devices.html","id":"apsystems-device-coverage","dir":"Articles","previous_headings":"","what":"APsystems device coverage","title":"APSystems devices","text":"following APSystems devices covered :","code":""},{"path":[]},{"path":"https://camembr.github.io/microinverterdata/articles/APSystems_devices.html","id":"design","dir":"Articles","previous_headings":"Continuous local mode for your micro-inverter","what":"Design","title":"APSystems devices","text":"Permanent local mode setup configuration micro-inverter allow REST API calls local network inverter. high level network setup :","code":""},{"path":"https://camembr.github.io/microinverterdata/articles/APSystems_devices.html","id":"inverter-setup","dir":"Articles","previous_headings":"Continuous local mode for your micro-inverter","what":"Inverter setup","title":"APSystems devices","text":"summary expected configuration every inverter reach. Please refer official manufacturer user manual detailed setup.","code":""},{"path":"https://camembr.github.io/microinverterdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christophe Regouby. Author, maintainer, copyright holder.","code":""},{"path":"https://camembr.github.io/microinverterdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Regouby C (2024). microinverterdata: Collect microinverter data. R package version 0.0.9, https://camembr.github.io/microinverterdata/.","code":"@Manual{,   title = {microinverterdata: Collect your microinverter data},   author = {Christophe Regouby},   year = {2024},   note = {R package version 0.0.9},   url = {https://camembr.github.io/microinverterdata/}, }"},{"path":"https://camembr.github.io/microinverterdata/index.html","id":"microinverterdata","dir":"","previous_headings":"","what":"Collect your microinverter data","title":"Collect your microinverter data","text":"goal microinverterdata provide access local micro-inverter data.","code":""},{"path":"https://camembr.github.io/microinverterdata/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Collect your microinverter data","text":"can install development version {microinverterdata} GitHub :","code":"# install.packages(\"pak\") pak::pak(\"CamembR/microinverterdata\")"},{"path":"https://camembr.github.io/microinverterdata/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Collect your microinverter data","text":"basic example get inverter data single device: single device includes 2 separated inverters. get one row data per inverter, .e. per solar panel. can also use vector IP adresses device_ip. Thus command run inverters packages also gives access inverter information get_device_info() inverter internal alarms get_alarm().","code":"library(microinverterdata)  ## single micro-inverter device data get_output_data(device_ip = \"192.168.0.75\") #> # A tibble: 2 × 5 #>   device_id    inverter   output_power today_energy lifetime_energy #>   <chr>        <chr>               [W]         [kW/h]          [kW/h] #> 1 E07000017176 inverter_1          127          0.336            251. #> 2 E07000017176 inverter_2          128          0.342            265. ## multiple inverters data get_output_data(device_ip = c(\"192.168.0.75\", \"192.168.0.186\")) #> # A tibble: 4 × 5 #>   device_id    inverter   output_power today_energy lifetime_energy #>   <chr>        <chr>               [W]         [kW/h]          [kW/h] #> 1 E07000017176 inverter_1          126          0.336           251.  #> 2 E07000017176 inverter_2          128          0.342           265.  #> 3 E07000021746 inverter_1          125          0.334            44.0 #> 4 E07000021746 inverter_2          123          0.329            59.0"},{"path":"https://camembr.github.io/microinverterdata/index.html","id":"inverter-support-and-configuration","dir":"","previous_headings":"","what":"Inverter support and configuration","title":"Collect your microinverter data","text":"package requires minimal version configuration supported inverters :","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_alarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get inverter device alarms — get_alarm","title":"Get inverter device alarms — get_alarm","text":"Get inverter device alarms","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_alarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get inverter device alarms — get_alarm","text":"","code":"get_alarm(device_ip, model = \"APSystems\")"},{"path":"https://camembr.github.io/microinverterdata/reference/get_alarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get inverter device alarms — get_alarm","text":"device_ip list vector devices IP address model inverter device model. Currently \"APSystems\" supported.","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_alarm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get inverter device alarms — get_alarm","text":"dataframe one row device information per `device_id` answering query.","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_alarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get inverter device alarms — get_alarm","text":"","code":"if (FALSE) { get_alarm(c(\"192.168.0.12\", \"192.168.0.230\")) }"},{"path":"https://camembr.github.io/microinverterdata/reference/get_device_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get inverter device information — get_device_info","title":"Get inverter device information — get_device_info","text":"Get inverter device information","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_device_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get inverter device information — get_device_info","text":"","code":"get_device_info(device_ip, model = \"APSystems\")"},{"path":"https://camembr.github.io/microinverterdata/reference/get_device_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get inverter device information — get_device_info","text":"device_ip list vector devices IP address model inverter device model. Currently \"APSystems\" supported.","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_device_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get inverter device information — get_device_info","text":"data-frame one row device information per `device_id` answering query.","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_device_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get inverter device information — get_device_info","text":"","code":"if (FALSE) { get_device_info(c(\"192.168.0.12\", \"192.168.0.230\")) }"},{"path":"https://camembr.github.io/microinverterdata/reference/get_output_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get inverter output data — get_output_data","title":"Get inverter output data — get_output_data","text":"Get inverter output data","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_output_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get inverter output data — get_output_data","text":"","code":"get_output_data(device_ip, model = \"APSystems\")"},{"path":"https://camembr.github.io/microinverterdata/reference/get_output_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get inverter output data — get_output_data","text":"device_ip list vector devices IP address model inverter device model. Currently \"APSystems\" supported.","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_output_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get inverter output data — get_output_data","text":"dataframe one row device output power energy per   `device_id` / `inverter` combination.","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/get_output_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get inverter output data — get_output_data","text":"","code":"if (FALSE) { get_output_data(c(\"192.168.0.12\", \"192.168.0.230\")) }"},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_device.html","id":null,"dir":"Reference","previous_headings":"","what":"AP System single device query — query_ap_device","title":"AP System single device query — query_ap_device","text":"AP System single device query","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_device.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AP System single device query — query_ap_device","text":"","code":"query_ap_device(device_ip, query)"},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_device.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AP System single device query — query_ap_device","text":"device_ip IP address APSystem device query API query string","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_device.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AP System single device query — query_ap_device","text":"data-frame `device_id` column `$data` turned    many columns expected","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_device.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AP System single device query — query_ap_device","text":"","code":"if (FALSE) { query_ap_device(device_ip = \"192.168.0.234\", query = \"getDeviceInfo\") }"},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_devices.html","id":null,"dir":"Reference","previous_headings":"","what":"AP System multi-device query — query_ap_devices","title":"AP System multi-device query — query_ap_devices","text":"AP System multi-device query","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_devices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AP System multi-device query — query_ap_devices","text":"","code":"query_ap_devices(device_ip, query)"},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_devices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AP System multi-device query — query_ap_devices","text":"device_ip list vector APSystem device IP address query API query string","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_devices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AP System multi-device query — query_ap_devices","text":"data-frame row `device_id`, `$data` turned    many columns expected","code":""},{"path":"https://camembr.github.io/microinverterdata/reference/query_ap_devices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AP System multi-device query — query_ap_devices","text":"","code":"if (FALSE) { query_ap_devices(device_ip = c(\"192.168.0.234\", \"192.168.0.235\"),                  query = \"getDeviceInfo\"                  ) }"},{"path":"https://camembr.github.io/microinverterdata/news/index.html","id":"microinverterdata-010","dir":"Changelog","previous_headings":"","what":"microinverterdata 0.1.0","title":"microinverterdata 0.1.0","text":"Initial CRAN submission. Support APSystems EZ1 Continuous local mode","code":""}]
